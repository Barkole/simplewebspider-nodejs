image: "node:12-alpine"

variables:
  YARN_CACHE_FOLDER: "${CI_PROJECT_DIR}/.cache/yarn"

cache:
  paths:
    - ".cache/yarn"
  key: "${CI_PROJECT_NAME}"
  policy: pull
  untracked: false

before_script:
  - apk add yarn bash

stages:
  - build
  - test
  - package

Build:Node:
  stage: build
  script:
    - apk add git
    - yarn global add typescript
    - yarn build
  artifacts:
    paths:
      - dist/
      - node_modules/
  cache:
    untracked: true
    paths:
      - ".cache/yarn"
    key: "${CI_PROJECT_NAME}"
    policy: pull-push

Test:Outdated:
  stage: test
  script:
    - yarn outdated | tee outdated.txt
  artifacts:
    paths:
      - outdated.txt
  dependencies:
    - Build:Node
  needs:
    - Build:Node

Package:Binaries:
  stage: package
  script:
    - yarn global add pkg
    - yarn build-binaries
  artifacts:
    paths:
      - dist-binaries/
  dependencies:
    - Build:Node
  needs:
    - Build:Node

Package:Node.js:
  stage: package
  script:
    - yarn install --production --frozen-lockfile
  artifacts:
    paths:
      - dist/
      - node_modules/
      - package.json
      - LICENSE
      - README.md
      - .env.example
      - bootstrap.txt
  dependencies:
    - Build:Node
  needs:
    - Build:Node
